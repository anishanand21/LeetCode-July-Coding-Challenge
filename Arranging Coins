You have a total of n coins that you want to form in a staircase shape, where every k-th row must have exactly k coins.
Given n, find the total number of full staircase rows that can be formed.
n is a non-negative integer and fits within the range of a 32-bit signed integer.

Example 1:
n = 5
The coins can form the following rows:
¤
¤ ¤
¤ ¤
Because the 3rd row is incomplete, we return 2.

Example 2:
n = 8
The coins can form the following rows:
¤
¤ ¤
¤ ¤ ¤
¤ ¤
Because the 4th row is incomplete, we return 3.

class Solution {
public:
    int arrangeCoins(int n) {
        int count = 0;
        int i = 1;
        while(n) {
            n = n - i;
            if(n < 0) {
                break;
            }
            count++;
            i = i + 1;
        }
        return count;
    }
};

Maths solution:

We know that the sum of natural numbers upto xth natural number is x*(x+1)/2.

We have been given the total number of coins we have which is nothing but the sum of these natural numbers itself.
So we get the formula:
x*(x+1)/2 = n
Here we have to solve for x to get the answer. Upon which we get:
x = (-1 + sqrt(1+8*n))/2

class Solution {
public:
    int arrangeCoins(int n) {
        return (-1+sqrt(1+ 8*long(n)))/2;
    }
};
